@import '../settings';
@import '../mixins/fontsize';

pre, code {
  font-family: $font-family-code;
}

code {
  padding: 3px 5px;
  background: $color-lightgrey;
  color: $color-midgrey-dark;
  border-radius: 4px;
}

pre {
  display: block;
  padding: 12px 15px;
  background: $color-darkgrey;
  color: $color-lightgrey;
  border-radius: 4px;
  overflow-x: auto;

  code {
    display: block;
    position: relative;
    padding: 0;
    background: $color-darkgrey;
    color: $color-lightgrey;

    &:after {
      display: block;
      position: absolute;
      top: -2px;
      right: -6px;
      font-family: $font-family-default;
      font-weight: normal;
      @include font-size(9px);
      background-color: lighten($color-darkgrey, 20%);
      padding: 3px 5px;
      border-radius: 3px;
      opacity: 0.45;
      transition: opacity 150ms ease;
    }

    &:hover {
      &:after {
        opacity: 0;
      }
    }

    &.language-javascript, &.language-js {
      &:after {
        content: "JavaScript";
      }
    }

    &.language-css:after {
        content: "CSS";
    }

    &.language-html:after {
        content: "HTML";
    }

    &.language-coffeescript, &.language-cs {
      &:after {
        content: "CoffeeScript";
      }
    }
  }

  .comment {
    color: $color-rainbow-comment;
  }

  .constant {
    color: $color-rainbow-constant;
  }

  .storage {
    color: $color-rainbow-storage;
  }

  .string, .comment.docstring {
    color: $color-rainbow-string;
  }

  .support.tag {
    color: $color-rainbow-tag;
  }

  .keyword {
    color: $color-rainbow-keyword;
  }

  .selector {
    color: $color-rainbow-selector;
  }

  .inherited-class {
    font-style: italic;
  }

  .operator, .support.tag-name, .entity.tag {
    color: $color-rainbow-operator;
  }

  .entity, .support.attribute, .entity.attribute {
    color: $color-rainbow-attribute;
  }

  .css-property, .storage.function {
    font-style: italic;
  }

  .variable {
    &.global, &.class, &.instance {
      color: $color-rainbow-global;
    }
  }

  .support, code[data-language="c"] .function.call {
    color: $color-rainbow-support;
  }

  code[data-language="html"] .support.operator {
    color: $color-white;
  }
}
