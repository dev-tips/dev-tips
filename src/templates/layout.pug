include components.pug

- const metaDescription = stripTags(shortcodes(markdown(description || text || answer || ''))).trim()
- const trimmedMetaDescription = trimDescription(metaDescription)
- const img = [...images, ...(parent ? parent.images : [])]
- const share = img.find(image => image.url.endsWith('/share.png'))
- const feed = findPageByUrl('/feed')

doctype html
html(lang='en', itemscope, itemtype=`http://schema.org/${getSchemaForTemplate(template)}`)
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    if (template === 'home')
      meta(name='description', content=title)
    else
      meta(name='description', content=trimmedMetaDescription)
    if (template === 'home')
      meta(itemprop='name', content='Dev Tips')
      meta(itemprop='description', content=title)
    else if (template === 'post')
      meta(itemprop='headline', content=title)
      meta(itemprop='description', content=trimmedMetaDescription)
    else
      meta(itemprop='name', content=title)
      meta(itemprop='description', content=trimmedMetaDescription)
    if (share)
      meta(itemprop='image', content=`${hostname}${share.url}`)
    else
      meta(itemprop='image', content=`${hostname}${basepath('/assets/img/logo.png')}`)
    meta(name='twitter:card', content='summary_large_image')
    meta(name='twitter:title', content=title)
    meta(name='twitter:description', content=trimmedMetaDescription)
    if (share)
      meta(name='twitter:image', content=`${hostname}${share.url}`)
      meta(name='twitter:image:alt', content=title)
    else
      meta(name='twitter:image', content=`${hostname}${basepath('/assets/img/logo.png')}`)
      meta(name='twitter:image:alt', content='Dev Tips')
    if (template === 'post' && author)
      - const authorData = findPageByUrl(`/authors/${author}`)
      if (authorData && authorData.twitter)
        meta(name='twitter:creator', content=`@${authorData.twitter}`)
    meta(property='og:url', content=`${hostname}${url}`)
    meta(property='og:title', content=title)
    meta(property='og:description', content=trimmedMetaDescription)
    if (share)
      meta(property='og:image', content=`${hostname}${share.url}`)
      meta(property='og:image:width', content=share.width)
      meta(property='og:image:height', content=share.height)
    else
      meta(property='og:image', content=`${hostname}${basepath('/assets/img/logo.png')}`)
      meta(property='og:image:width', content='1000')
      meta(property='og:image:height', content='800')
    meta(property='og:type', content=getOpenGraphTypeForTemplate(template))
    meta(property='og:site_name', content='Dev Tips')
    meta(property='fb:app_id', content='217761882747074')
    block meta
    if (template === 'home')
      title Dev Tips
    else
      title #{title || name}
    link(rel='preload', href=basepath('/assets/css/style.css'), as='style')
    link(rel='preload', href=basepath('/assets/js/scripts.js'), as='script')
    each font in fonts
      link(rel='preload', href=basepath(`/assets/fonts/${font.file}.woff2`), as='font', type='font/woff2', crossorigin)
    link(rel='stylesheet', href=basepath('/assets/css/style.css'))
    link(rel='alternate', href=feed.url, title='RSS Feed')
    block link
  body(class=`page page--${template}`)
    +header(color || (parent ? parent.color : undefined))
      +headerSite(genesis.url)
      +headerTitle(`${title || name}${alias ? ` (${alias})` : ''}`)
      if (description)
        +headerDescription(description)(itemprop='abstract')
      if (authors || date || updated)
        +headerMeta
          if (authors)
            +headerAuthors
                each author in authors.split(/\s*,\s*/).map(author => genesis.findPageByUrl(`/authors/${author}`))
                  +headerAuthor(author)(itemprop='author')
          if (date || updated)
            +headerDate(date, updated)
    block content
    +footer()
      h2 About Dev Tips
      | !{shortcodes(markdown(genesis.text))}
      p Our #[a(href=genesis.findPageByUrl('/glossary').url) glossary] attempts to explain terms and buzzwords often used in software development in a few simple words with the purpose of having explanations than can be easily referenced.
      p All articles are licensed under #[a(href='https://creativecommons.org/licenses/by-sa/4.0/') CC-BY-SA 4.0]. Code snippets are licensed under #[a(href='https://opensource.org/licenses/MIT') MIT], unless otherwise noted. Thanks a ton to all #[a(href=findPageByUrl('/authors').url) authors] for their awesome contributions.
      p You can find a list of all articles in our #[a(href=genesis.findPageByUrl('/archive').url) archive]. If you’d like to contribute to this site, simply head over to its #[a(href='https://github.com/dev-tips/dev-tips') GitHub repository], fork it, make your contributions, and send a pull request.
      p © #{(new Date().getFullYear())} Dev Tips
    script(src=basepath('/assets/js/scripts.js'), async)
