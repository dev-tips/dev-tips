mixin header(color)
  header.header(style=color ? { '--color': color, '--content': getContentColor(color) } : undefined, class=(color ? 'header--colored' : undefined))
    .header__wrapper
      block

mixin headerSite(url)
  .header__site(itemprop='publisher', itemscope, itemtype='https://schema.org/Organization')
    div(itemprop='logo', itemscope, itemtype='https://www.schema.org/ImageObject')
      link(itemprop='url', href=basepath('/assets/img/logo.png'))
      meta(itemprop='width', content='1000')
      meta(itemprop='height', content='800')
    a(href=url, itemprop='url')
      span(itemprop='name')
        span.header__dev Dev
        = ' '
        span.header__tips Tips

mixin headerTitle(title)
  .header__title&attributes(attributes)
    h1 #{title}

mixin headerDescription(description)
  p.header__description&attributes(attributes) #{description}

mixin headerMeta()
  .header__meta&attributes(attributes)
    block

mixin headerAuthors()
  ul.header__authors&attributes(attributes)
    block

mixin headerAuthor(data)
  li.header__author(itemscope, itemtype='http://schema.org/Person')&attributes(attributes)
    if (data.website)
      meta(itemprop='url', content=data.website)
    a.header__link(href=data.url)
      img.header__avatar(src=`https://avatars.githubusercontent.com/${data.gitHub}`, alt=data.name, loading='lazy')
      = ' '
      span #{data.name}

mixin headerDate(published, updated)
  .header__date
    time(datetime=formatDate(published), itemprop='datePublished') #{formatDate(published, 'MMMM Do YYYY')}
    if (updated)
      = ' (updated on '
      time(datetime=formatDate(updated), itemprop='dateModified') #{formatDate(updated, 'MMMM Do YYYY')}
      = ')'
